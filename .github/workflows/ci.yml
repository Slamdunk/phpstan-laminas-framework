name: "Integrate"

on:
  pull_request:
  push:
    branches:
      - "master"
      - "renovate/*"

env:
  INI_VALUES: zend.assertions=1,error_reporting=-1,date.timezone="Europe/Rome"

jobs:
  composer-json-lint:
    name: "Lint composer.json"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        php-version:
          - "8.3"

    steps:
      - uses: "actions/checkout@v4"
      - uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"
          ini-values: "${{ env.INI_VALUES }}"
          tools: composer-normalize

      - run: "composer validate --strict"
      - run: "composer-normalize --dry-run"

  tests:
    name: "Tests"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        php-version:
          - "8.3"
          - "8.4"

    steps:
      - uses: "actions/checkout@v4"
      - uses: "shivammathur/setup-php@v2"
        with:
          coverage: "pcov"
          php-version: "${{ matrix.php-version }}"
          ini-values: "${{ env.INI_VALUES }}"
      - uses: "ramsey/composer-install@v3"

      - name: "Run tests"
        timeout-minutes: 5
        run: "vendor/bin/phpunit --no-coverage --no-logging"

  code-coverage:
    name: "Code Coverage"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        php-version:
          - "8.3"

    steps:
      - uses: "actions/checkout@v4"
      - uses: "shivammathur/setup-php@v2"
        with:
          coverage: "pcov"
          php-version: "${{ matrix.php-version }}"
          ini-values: "${{ env.INI_VALUES }}"
      - uses: "ramsey/composer-install@v3"

      - name: "Run tests"
        timeout-minutes: 10
        run: "vendor/bin/phpunit --coverage-clover=coverage.xml"

      - name: "Send code coverage report to Codecov.io"
        uses: "codecov/codecov-action@v5"
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: true

  coding-standards:
    name: "Coding Standards"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        php-version:
          - "8.3"

    steps:
      - uses: "actions/checkout@v4"
      - uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"
          ini-values: "${{ env.INI_VALUES }}"
      - uses: "ramsey/composer-install@v3"

      - name: "Check coding standards"
        run: "vendor/bin/php-cs-fixer fix --verbose --dry-run --diff"

  static-analysis:
    name: "Static Analysis"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        php-version:
          - "8.3"

    steps:
      - uses: "actions/checkout@v4"
      - uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"
          ini-values: "${{ env.INI_VALUES }}"
      - uses: "ramsey/composer-install@v3"

      - name: "Run static analysis"
        run: "vendor/bin/phpstan analyse --no-progress"
